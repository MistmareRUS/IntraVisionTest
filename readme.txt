Web-приложение имитирующее работу автомата по продаже напитков.

Разработано на языке C# с использованием технологий ASP.NET MVC и EntityFramework, несколько вспомогательных скриптов на JavaScript.
В качестве СУБД использован MS SQL. Использовалась среда разработки VisualStudio 2017. Доступ реализован на двух страницах (пользовательская и административная) и одной мастер-странице.

Выделены 3 основных модели, необходимых для функционирования приложения: Coin (каждая из 4х доступных для вноса монета), Drink (напиток, который пользователь может купить) и Purchase (модель покупки, хранящая сведения о внесенных пользователем деньгах и выбранных напитках). Coin и Drink хранятся в БД, Purchase формируется при обращении пользователя и хранится в переменной сессии, что позволяет хранить информацию даже при переключении на окно администрации из одного и того же окна браузера. База данных хранится в каталоге с приложением App_Data. К контексту БД подключен инициализатор, который создает и наполняет первоначальную БД 3 напитками. Этот список легко расширяется в окне администрирования.  Для переключения между окнами используется параметр для адресной строки «SecretKey» со значением «magickey»( http://localhost:*****/Home/Index?SecretKey=magicKey), но для удобства в левом верхнем углу размещена статичная кнопка для перехода между ними.

- Пользовательское окно
Отображается таблица из доступных для покупки напитков. При нулевом балансе кнопки для выбора напитков не доступны, отображается только картинка-название-цена. В правой верхней части расположен статичный блок для имитации внесения монет. Заблокированные монеты перечеркнуты, остальные доступны для нажатия. При каждом внесении монеты количество монет этого номинала инкрементируется в БД, пересчитывается общая сумма внесенных денег и становятся доступными для покупки те напитки, стоимость которых не превышает свободный остаток. У купленных напитков отображается количество, а  также становится доступна клавиша для уменьшения количества напитков этой марки. При каждом вводе осуществляется проверка возможности выдачи сдачи, при отсутствии которой выдается сообщение в секции “cashbox”. Количество доступных напитков ограничено количеством, сохраненным в БД и суммой, внесенной пользователем. При внесении денег, выборе напитка и соблюдении возможности выдать сдачу появляется клавиша в секции “cashbox” для завершения покупки. Алгоритм выдачи сдачи перебирает от высшего номинала(опираясь на доступное количество) к низшему (10-5-2-1). При завершении покупки выдается сообщение с перечислением выданных напитков и монет, модель Purchase инициализируется новым объектом.

- Административное окно
Хранит в себе 2 таблицы.
Первая – управление монетами. Доступно изменение количества и булевого свойства доступности в виде чекбокса. Заблокированные монеты не доступны пользователя для внесения, но учитываются при расчете сдачи. Изменения сохраняются соответствующей кнопкой.
Вторая - управление напитками. Они перечислены в таблице и предоставляют изменять картинку/название/цену/количество (настроена валидация, чтобы избежать пустых полей и отрицательных значений ). Для каждого напитка картинку можно заменить любым .bmp или .png файлом, что проверяется как фильтром на стороне клиента, так и методе сохранения (сверяется mime объекта). Удаление подтверждается JavaScript confirm’ом для избежания случайного нажатия. При нажатии кнопки внизу таблицы отображается форма для заполнения и создания нового напитка. При совпадении названия с уже имеющимся напитком, не зависимо от регистра, приходит сообщение об отказе. Иначе напиток сохраняется  в БД и становится доступным для клиента.

Заключение.
 На выполнение потребовалось 5 дней, обе дополнительных задачи выполнены. Это мой первый подобный проект, возможно, что-то сделано не так, как это принято у опытных специалистов. Разрабатывал на основе учебных материалов, а не былом опыте. Готов улучшать свои навыки по мере изучения новых материалов.
